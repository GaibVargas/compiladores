# Observando todas as produções do não terminal PROGRAM, 
# pode ser observar que nenhuma delas tem o mesmo prefixo   
PROGRAM  ->  STATEMENT  
PROGRAM  ->  FUNCLIST  
PROGRAM  ->  e

# Observando todas as produções do não terminal FUNCLIST, 
# pode ser observar que nenhuma delas tem o mesmo prefixo   
FUNCLIST  ->  FUNCDEF FUNCLIST'
FUNCLIST' ->  FUNCLIST
FUNCLIST' ->  e

# Observando todas as produções do não terminal FUNCDEF, 
# pode ser observar que nenhuma delas tem o mesmo prefixo  
FUNCDEF  ->  def ident(PARAMLIST){STATELIST}

# Observando todas as produções do não terminal PARAMLIST, 
# pode ser observar que nenhuma delas tem o mesmo prefixo 
PARAMLIST  ->  int ident PARAMLISTINT
PARAMLISTINT -> , PARAMLIST
PARAMLISTINT -> e

PARAMLIST -> float ident PARAMLISTFLOAT
PARAMLISTFLOAT -> , PARAMLIST
PARAMLISTFLOAT -> e

PARAMLIST  ->  string ident PARAMLISTSTRING
PARAMLISTSTRING -> , PARAMLIST
PARAMLISTSTRING -> e

PARAMLIST  ->  tint ident INDEX_T PARAMLISTTINT
PARAMLISTTINT -> , PARAMLIST
PARAMLISTTINT -> e

PARAMLIST  ->  tfloat ident INDEX_T PARAMLISTTFLOAT
PARAMLISTTFLOAT -> , PARAMLIST
PARAMLISTTFLOAT -> e

PARAMLIST  ->  tstring ident INDEX_T PARAMLISTTSTRING
PARAMLISTTSTRING -> , PARAMLIST
PARAMLISTTSTRING -> e

PARAMLIST  ->  e

# Observando todas as produções do não terminal STATEMENT, 
# pode ser observar que nenhuma delas tem o mesmo prefixo
STATEMENT  ->  VARDECL;  
STATEMENT  ->  ATRIBSTAT;  
STATEMENT  ->  PRINTSTAT;  
STATEMENT  ->  READSTAT;  
STATEMENT  ->  RETURNSTAT;  
STATEMENT  ->  IFSTAT  
STATEMENT  ->  FORSTAT  
STATEMENT  ->  {STATELIST}  
STATEMENT  ->  break;  
STATEMENT  ->  ;
 
# Observando todas as produções do não terminal INDEX, 
# pode ser observar que nenhuma delas tem o mesmo prefixo
INDEX  ->  [int_constant] INDEX'  
INDEX' ->  INDEX
INDEX' ->  e

# Observando todas as produções do não terminal INDEX_T, 
# pode ser observar que nenhuma delas tem o mesmo prefixo
INDEX_T  ->  [int_constant]
 
# Observando todas as produções do não terminal VARDECL, 
# pode ser observar que nenhuma delas tem o mesmo prefixo
VARDECL  ->  int ident VARDECL'
VARDECL  ->  float ident VARDECL'
VARDECL  ->  string ident VARDECL'  
VARDECL' ->  INDEX
VARDECL' ->  e
VARDECL  ->  tint ident INDEX_T  
VARDECL  ->  tfloat ident INDEX_T  
VARDECL  ->  tstring ident INDEX_T

# Observando todas as produções do não terminal ATRIBSTAT, 
# pode ser observar que nenhuma delas tem o mesmo prefixo 
ATRIBSTAT  -> LVALUE = ATRIBSTAT'
ATRIBSTAT' -> EXPRESSION 
ATRIBSTAT' -> ALLOCEXPRESSION  
ATRIBSTAT' -> FUNCCALL 
 
# Observando todas as produções do não terminal FUNCCALL, 
# pode ser observar que nenhuma delas tem o mesmo prefixo 
FUNCCALL  ->  call(ident(PARAMLISTCALL))
 
# Observando todas as produções do não terminal PARAMLISTCALL, 
# pode ser observar que nenhuma delas tem o mesmo prefixo 
PARAMLISTCALL  ->  ident PARAMLISTCALL'    
PARAMLISTCALL  ->  e
PARAMLISTCALL' ->  , PARAMLISTCALL  
PARAMLISTCALL' ->  e
 
# Observando todas as produções do não terminal PRINTSTAT, 
# pode ser observar que nenhuma delas tem o mesmo prefixo 
PRINTSTAT  ->  print EXPRESSION
 
# Observando todas as produções do não terminal READSTAT, 
# pode ser observar que nenhuma delas tem o mesmo prefixo 
READSTAT  ->  read LVALUE
 
# Observando todas as produções do não terminal RETURNSTAT, 
# pode ser observar que nenhuma delas tem o mesmo prefixo 
RETURNSTAT  ->  return RETURNSTAT'
RETURNSTAT' ->  ident
RETURNSTAT' ->  e
 
# Observando todas as produções do não terminal IFSTAT, 
# pode ser observar que nenhuma delas tem o mesmo prefixo 
IFSTAT  ->  if(EXPRESSION) STATEMENT  IFSTAT'
IFSTAT' ->  else STATEMENT
IFSTAT' ->  e

# Observando todas as produções do não terminal FORSTAT, 
# pode ser observar que nenhuma delas tem o mesmo prefixo  
FORSTAT  ->  for(ATRIBSTAT; EXPRESSION; ATRIBSTAT) STATEMENT
 
# Observando todas as produções do não terminal STATELIST, 
# pode ser observar que nenhuma delas tem o mesmo prefixo  
STATELIST  ->  STATEMENT STATELIST'
STATELIST' ->  STATELIST
STATELIST' ->  e
 
# Observando todas as produções do não terminal ALLOCAUX, 
# pode ser observar que nenhuma delas tem o mesmo prefixo  
ALLOCAUX  ->  [NUMEXPRESSION] ALLOCAUX'
ALLOCAUX' ->  ALLOCAUX
ALLOCAUX' ->  e
 
# Observando todas as produções do não terminal ALLOCEXPRESSION, 
# pode ser observar que nenhuma delas tem o mesmo prefixo  
ALLOCEXPRESSION  ->  new ALLOCEXPRESSION'
ALLOCEXPRESSION' ->  int ALLOCAUX  
ALLOCEXPRESSION' ->  float ALLOCAUX  
ALLOCEXPRESSION' ->  string ALLOCAUX  
 
# Observando todas as produções do não terminal RELOP, 
# pode ser observar que nenhuma delas tem o mesmo prefixo  
RELOP  ->  <  
RELOP  ->  >  
RELOP  ->  <=  
RELOP  ->  >=  
RELOP  ->  ==  
RELOP  ->  !=
 
# Observando todas as produções do não terminal EXPRESSION_*, 
# pode ser observar que nenhuma delas tem o mesmo prefixo  
EXPRESSION    -> EXPRESSION_2 EXPRESSION'
EXPRESSION'   -> or EXPRESSION_2
EXPRESSION'   -> e
EXPRESSION_2  -> EXPRESSION_3 EXPRESSION_2'
EXPRESSION_2' -> and EXPRESSION_3
EXPRESSION_2' -> e
EXPRESSION_3  -> not EXPRESSION_4
EXPRESSION_3  -> EXPRESSION_4
EXPRESSION_4  -> bool(NUMEXPRESSION EXPRESSION_4')
EXPRESSION_4  -> (EXPRESSION)
EXPRESSION_4' -> RELOP NUMEXPRESSION
EXPRESSION_4' -> e
 
# Observando todas as produções do não terminal NUMEXPRESSIONAUX, 
# pode ser observar que nenhuma delas tem o mesmo prefixo
NUMEXPRESSIONAUX  ->  +NUMEXPRESSION  
NUMEXPRESSIONAUX  ->  -NUMEXPRESSION
 
# Observando todas as produções do não terminal NUMEXPRESSION, 
# pode ser observar que nenhuma delas tem o mesmo prefixo
NUMEXPRESSION   ->  TERM NUMEXPRESSION'
NUMEXPRESSION'  ->  NUMEXPRESSIONAUX
NUMEXPRESSION'  ->  e

# Observando todas as produções do não terminal TERM, 
# pode ser observar que nenhuma delas tem o mesmo prefixo
TERM  ->  UNARYEXPR TERM'  
TERM' ->  UNARYEXPRAUX
TERM' ->  e
 
# Observando todas as produções do não terminal UNARYEXPRAUX, 
# pode ser observar que nenhuma delas tem o mesmo prefixo
UNARYEXPRAUX  ->  *UNARYEXPR  
UNARYEXPRAUX  ->  /UNARYEXPR  
UNARYEXPRAUX  ->  %UNARYEXPR
 
# Observando todas as produções do não terminal UNARYEXPR, 
# pode ser observar que nenhuma delas tem o mesmo prefixo
UNARYEXPR  ->  +FACTOR  
UNARYEXPR  ->  -FACTOR  
UNARYEXPR  ->  FACTOR
 
# Observando todas as produções do não terminal FACTOR, 
# pode ser observar que nenhuma delas tem o mesmo prefixo
FACTOR  ->  int_constant  
FACTOR  ->  float_constant  
FACTOR  ->  string_constant  
FACTOR  ->  null  
FACTOR  ->  LVALUE  
FACTOR  ->  (NUMEXPRESSION)

# Observando todas as produções do não terminal LVALUE, 
# pode ser observar que nenhuma delas tem o mesmo prefixo 
LVALUE  ->  ident LVALUE'
LVALUE' ->  e 
LVALUE' ->  ALLOCAUX 
